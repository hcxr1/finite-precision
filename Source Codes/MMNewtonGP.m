% Floating Point Error Model -> Moment method
% Created by Rivan
% April 2016
% Last Edited 20/1/2017
tic
%% 1. clearing workspace and command window
% -------------------------------------------------------
clc; clear all; close all;
set(0,'DefaultFigureWindowStyle','docked');

format LongE
%% 2. Initialize symbolic terms (numerator)
%--------------------------------------------------------
M = 6; % Moment order (up to sixth moment)
NV = 13;
x = sym('x',[1,NV]); % Parameters in polynomial (x, y, delta[1...4]) is used 
q = 0; % q numerator
mantissa = 8;
prob_lv = 1e-5;

%% 3. Constructing the distribution struct
% --------------------------------------------------------
DistType{1}.Sym     = 0;
DistType{1}.Name    = {'pow'};
DistType{1}.Param   = {[1.1, 0.4, q]};

DistType{2}.Sym     = 0;
DistType{2}.Name    = {'pow'};
DistType{2}.Param   = {[1, 2^-mantissa, q]};

DistType{3}.Sym     = 0;
DistType{3}.Name    = {'pow'};
DistType{3}.Param   = {[1, 2^-mantissa, q]};

DistType{4}.Sym     = 0;
DistType{4}.Name    = {'pow'};
DistType{4}.Param   = {[1, 2^-mantissa, q]};

DistType{5}.Sym     = 0;
DistType{5}.Name    = {'pow'};
DistType{5}.Param   = {[1, 2^-mantissa, q]};

DistType{6}.Sym     = 0;
DistType{6}.Name    = {'pow'};
DistType{6}.Param   = {[1, 2^-mantissa, q]};

DistType{7}.Sym     = 0;
DistType{7}.Name    = {'pow'};
DistType{7}.Param   = {[1, 2^-mantissa, q]};

DistType{8}.Sym     = 0;
DistType{8}.Name    = {'pow'};
DistType{8}.Param   = {[1, 2^-mantissa, q]};

DistType{9}.Sym     = 0;
DistType{9}.Name    = {'pow'};
DistType{9}.Param   = {[1, 2^-mantissa, q]};

DistType{10}.Sym     = 0;
DistType{10}.Name    = {'pow'};
DistType{10}.Param   = {[1, 2^-mantissa, q]};

DistType{11}.Sym     = 0;
DistType{11}.Name    = {'pow'};
DistType{11}.Param   = {[1, 2^-mantissa, q]};

DistType{12}.Sym     = 0;
DistType{12}.Name    = {'pow'};
DistType{12}.Param   = {[1, 2^-mantissa, q]};

DistType{13}.Sym     = 0;
DistType{13}.Name    = {'pow'};
DistType{13}.Param   = {[1, 2^-mantissa, q]};

%% 4. Floating Point Model F to be solved
% --------------------------------------------------------
gp = rungp(@newton_method_config);
[P,Pf,ES,GES] = gppretty(gp,'best');
runtree(gp,'best');
P
% P = (4153590795364031*x(7))/2251799813685248 - (1238334042034065*x(2))/1125899906842624 - (986615889848165*x(4))/1125899906842624 - (4153590795364031*x(1))/2251799813685248 + (4153590795364031*x(13))/2251799813685248 + (4212080914228373*x(1)*x(9))/2251799813685248 - (4715517218600173*x(7)*x(9))/2251799813685248 + 6416559922689941/18014398509481984; %R^2 = 0.97476
% q = 22.8, p = 1e-5;% P = (54689105919799*x(5))/35184372088832 - (7843724294747685*x(2))/18014398509481984 + (1389988932510945*x(7))/1125899906842624 - (1389988932510945*x(8))/1125899906842624 + (1389988932510945*x(11))/1125899906842624 + (1766500306744991*x(12))/4503599627370496 + (7326456036788771*x(13))/4503599627370496 - (7843724294747685*x(7)*x(13))/18014398509481984 - (5233705250989281*x(2)*x(4)*x(9))/4503599627370496 - (7843724294747685*x(5)*x(7)*x(9))/18014398509481984 - 2632795651702267/1125899906842624; %R^2 = 0.97937
% PP = (54689105919799*x5)/35184372088832 - (7843724294747685*x2)/18014398509481984 + (1389988932510945*x7)/1125899906842624 - (1389988932510945*x8)/1125899906842624 + (1389988932510945*x11)/1125899906842624 + (1766500306744991*x12)/4503599627370496 + (7326456036788771*x13)/4503599627370496 - (7843724294747685*x7*x13)/18014398509481984 - (5233705250989281*x2*x4*x9)/4503599627370496 - (7843724294747685*x5*x7*x9)/18014398509481984 - 2632795651702267/1125899906842624;


% P = (4395512795947551*x(3)^2)/4503599627370496 - (1895415464434247*x(1)*x(3))/1125899906842624 + (3274837792514937*x(4)*x(12)^2)/4503599627370496 - (1895415464434247*x(4))/1125899906842624 + (4395512795947551*x(1)*x(5))/4503599627370496 + (3274837792514937*x(1)*x(11))/4503599627370496 - (5063846679666291*x(9)*(x(2) - x(13)))/4503599627370496 - 2755753110304313/72057594037927936; %R^2 = 0.94457
% PP = (4395512795947551*x3^2)/4503599627370496 - (1895415464434247*x1*x3)/1125899906842624 + (3274837792514937*x4*x12^2)/4503599627370496 - (1895415464434247*x4)/1125899906842624 + (4395512795947551*x1*x5)/4503599627370496 + (3274837792514937*x1*x11)/4503599627370496 - (5063846679666291*x9*(x2 - x13))/4503599627370496 - 2755753110304313/72057594037927936;
% P =(1736686902366839*x(1)^2*x(5)^3)/9007199254740992 - (1598192071802807*x(1))/4503599627370496 + (2695206950231331*x(12)^2)/4503599627370496 + (2695206950231331*x(11))/4503599627370496 - (461219757659181*x(10)*(x(3) + x(8) + x(9)))/2251799813685248 - 3783951855060207/9007199254740992; %R^2 = 0.94109
% P = (5020882433665463*x(12)^3*x(13)^3)/9007199254740992 - (6686541217762161*x(13))/18014398509481984 - (6686541217762161*x(2))/18014398509481984 - (6686541217762161*x(4))/18014398509481984 + (6686541217762161*x(8))/18014398509481984 - (6686541217762161*x(10))/18014398509481984 - (1215088297013221*x(3)*x(9))/1125899906842624 - (5880203838239973*x(4)^2*x(7)^2*x(8)^2)/9007199254740992 + 5150499106322253/2251799813685248; %R^2 = 0.97741
% P = (4586641657617851*x(12))/4503599627370496 - (4568673787884209*x(2)*x(9))/4503599627370496 - (3601324733569635*x(8)^3)/18014398509481984 - (3601324733569635*x(4)*x(9)*x(13))/18014398509481984 + (1539799643606967*x(5)*x(11)*x(13)*(x(8) + x(9) + x(13)))/4503599627370496 - 354222992546729/562949953421312; %R^2 = 0.9131
% P = (2907662791146349*x(7))/9007199254740992 + (175717148753989*x(10))/562949953421312 - (175717148753989*x(11))/562949953421312 - (2907662791146349*x(2)^3)/9007199254740992 - (175717148753989*x(9)^3)/562949953421312 - (829978198091361*x(3)^2*x(4)^2*x(12))/2251799813685248 + (8804212493410753*x(5)*x(11)*x(12)*x(13))/9007199254740992 - 5367808633812679/18014398509481984; % R^2 = 0.97115
% P = 0.55928887077043987208213593476103*x(7)^2*x(13)^2 - 0.68016182480853404346277102376916*x(7)*x(13) - 0.68016182480853404346277102376916*x(3)*x(7) + 0.68016182480853404346277102376916*x(13) - 0.68016182480853404346277102376916*x(4) + 1.1028207023206754415711738914752*x(5) + 1.1028207023206754415711738914752*x(11) + 1.1028207023206754415711738914752*x(12) - 0.30323395068028446974750522713293*x(2)*x(5) - 0.30323395068028446974750522713293*x(2)*x(9) - 0.30323395068028446974750522713293*x(2)*x(11) - 1.5979502298616121702679038207862; %R^2 = 0.95396
% P = 0.75690442799159862730107306560967*x(5) + 0.90634037936470510099518094193627*x(11) + 0.2988719027462129473882157526532*x(12) + 0.75690442799159862730107306560967*x(13) - 0.67767450384584575105717529908134*x(2)*x(4) - 0.26023624614147387694162993909686*x(3)*x(13) + 0.13442455395351313174323593102599*x(6)*x(10)^2 - 0.087450852255351124719950917096867*x(3)^2*x(13) - 0.1494359513731064736941078763266*x(7)^3 - 0.087450852255351124719950917096867*x(3)*x(11)*x(13) - 1.5909000123112448932261031586677; %R^2 = 0.95434
%% 5. Obtain Raw Moment & conversion to central moment
% --------------------------------------------------------
% PolyMoment is a toolbox used to calculate the moment.
EP = FastPolyMoment(P,x,DistType,M,NV);

%% 6. Distribution fitting of P
% --------------------------------------------------------
pt = 1e-3;
% a. numerator
limit = getbounds([1;EP]',pt);
xi = linspace(limit(1),limit(2),1e6);
% myabramem obtains distribution of the moment by using Maximum Entropy approach
[pdfxi,lambda] = myabramem(EP, xi);

pdfxi = pdfxi/trapz(xi,pdfxi); % normalize the pdf plot
cdfxi = cumtrapz(xi,pdfxi);  % find the cdf plot based on the pdf points

[mini,lbound] = min(abs(cdfxi - prob_lv));
[mini,ubound] = min(abs(cdfxi - (1-prob_lv)));
bound = [xi(lbound) xi(ubound)]
toc